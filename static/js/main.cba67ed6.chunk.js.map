{"version":3,"sources":["components/Footer.jsx","components/Navbar.jsx","images/giphy.gif","images/graph.jpeg","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/Connect.jsx","sections/Home.jsx","images/baby.gif","sections/Roadmap.jsx","App.js","index.js"],"names":["Footer","className","href","Navbar","useState","isOpen","setIsOpen","id","to","smooth","duration","onClick","type","aria-controls","aria-expanded","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","ref","offset","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Connect","input","len","useDispatch","useSelector","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","OWNER_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","COST0","COST1","COST2","COST3","COST4","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","target","length","substring","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","WalletAddress","toUpperCase","TheOwnerAddress","gasLimit","totalCostWei","String","totalGasLimit","mint","send","from","value","once","err","then","receipt","claimNFTs","Home","src","gif","frameBorder","allow","allowFullScreen","title","graph","alt","Roadmap","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cba67ed6.chunk.js","sourcesContent":["import { BsDiscord } from \"react-icons/bs\";\r\nimport { BsTwitter } from \"react-icons/bs\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"pt-16 pb-10 px-5 lg:px-16 xl:px-24 2xl:px-40 md:flex justify-between items-center text-center\">\r\n      <h1 className=\"text-lg md:text-2xl text-[#e13c33]\">\r\n        Welcome to crypto clones\r\n      </h1>\r\n      <h1 className=\"text-lg md:text-2xl text-[#e13c33] mt-2 md:mt-0\">\r\n        Follow us\r\n      </h1>\r\n      <div className=\"flex items-center justify-center md:justify-start mt-8 md:mt-0\">\r\n        <a href=\"#\">\r\n          <BsDiscord className=\"text-white text-3xl md:text-[2.5rem] mr-10\" />\r\n        </a>\r\n        <a href=\"#\">\r\n          <BsTwitter className=\"text-[#e13c33] text-3xl md:text-[2.5rem]\" />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { Transition } from \"@headlessui/react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { BsDiscord } from \"react-icons/bs\";\r\nimport { BsTwitter } from \"react-icons/bs\";\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <nav id=\"navbar\" className=\"py-5\">\r\n        <div className=\"mx-5 lg:mx-12 xl:mx-16 2xl:mx-24\">\r\n          <div className=\"flex items-center justify-between h-16\">\r\n            <div>\r\n              <h1 className=\"text-[#e13c33] text-2xl md:text-[40px] font-semibold\">\r\n                Crypto Clones\r\n              </h1>\r\n            </div>\r\n            <div>\r\n              <div className=\"hidden lg:block\">\r\n                <div className=\"flex items-center\">\r\n                  <Link to=\"navbar\" smooth={true} duration={1000}>\r\n                    <h1 className=\"text-[#e13c33] font-light text-lg mr-10 cursor-pointer border-b-2 border-[#e13c33]\">\r\n                      Home\r\n                    </h1>\r\n                  </Link>\r\n                  <Link to=\"roadmap\" smooth={true} duration={1000}>\r\n                    <h1 className=\"text-[#e13c33] font-light text-lg mr-20 cursor-pointer hover:border-b-2 border-[#e13c33]\">\r\n                      Roadmap\r\n                    </h1>\r\n                  </Link>\r\n                  <a href=\"#\">\r\n                    <BsDiscord className=\"text-white text-[2.5rem] mr-10\" />\r\n                  </a>\r\n                  <a href=\"#\">\r\n                    <BsTwitter className=\"text-[#e13c33] text-[2.5rem]\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                type=\"button\"\r\n                className=\"lg:hidden items-center justify-center p-2 rounded-md hover:text-white hover:bg-gray-800\"\r\n                aria-controls=\"mobile-menu\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {!isOpen ? (\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-8 w-8 text-[#e13c33]\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M4 6h16M4 12h16M4 18h16\"\r\n                    />\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    className=\"h-8 w-8 text-[#e13c33]\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Transition\r\n          show={isOpen}\r\n          enter=\"transition ease-out duration-100 transform\"\r\n          enterFrom=\"opacity-0 scale-95\"\r\n          enterTo=\"opacity-100 scale-100\"\r\n          leave=\"transition ease-in duration-75 transform\"\r\n          leaveFrom=\"opacity-100 scale-100\"\r\n          leaveTo=\"opacity-0 scale-95\"\r\n        >\r\n          {(ref) => (\r\n            <div className=\"\" id=\"mobile-menu\">\r\n              <div className=\"pt-2 pb-3 space-y-1 text-center\">\r\n                <Link\r\n                  to=\"navbar\"\r\n                  smooth={true}\r\n                  duration={1000}\r\n                  onClick={() => setIsOpen(!isOpen)}\r\n                >\r\n                  <p className=\"text-[#e13c33] text-lg md:text-2xl mt-8\">\r\n                    Home\r\n                  </p>\r\n                </Link>\r\n                <Link\r\n                  to=\"roadmap\"\r\n                  offset={-250}\r\n                  smooth={true}\r\n                  duration={1000}\r\n                  onClick={() => setIsOpen(!isOpen)}\r\n                >\r\n                  <p className=\"text-[#e13c33] text-lg md:text-2xl my-8\">\r\n                    Roadmap\r\n                  </p>\r\n                </Link>\r\n                <div className=\"flex justify-center items-center pb-10 border-b-2 border-[#e13c33]\">\r\n                  <a href=\"#\">\r\n                    <BsDiscord className=\"text-white text-3xl mr-10\" />\r\n                  </a>\r\n                  <a href=\"#\">\r\n                    <BsTwitter className=\"text-[#e13c33] text-3xl\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Transition>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/giphy.7e8c49a3.gif\";","export default __webpack_public_path__ + \"static/media/graph.25907c7c.jpeg\";","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nconst Connect = () => {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    OWNER_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    COST0: 0,\r\n    COST1: 0,\r\n    COST2: 0,\r\n    COST3: 0,\r\n    COST4: 0,\r\n\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let WalletAddress = blockchain.account;\r\n    WalletAddress = WalletAddress.toUpperCase();\r\n\r\n    let TheOwnerAddress = CONFIG.OWNER_ADDRESS;\r\n    TheOwnerAddress = TheOwnerAddress.toUpperCase();\r\n\r\n    if (WalletAddress==TheOwnerAddress) {\r\n      CONFIG.WEI_COST=0;\r\n\r\n    } else if  \r\n    \r\n      (data.totalSupply > 1 && data.totalSupply < 50  ) \r\n        CONFIG.WEI_COST=CONFIG.COST0;\r\n       \r\n    else if \r\n    (data.totalSupply > 50 && data.totalSupply < 200 ) \r\n        CONFIG.WEI_COST=CONFIG.COST1;\r\n        else if \r\n    (data.totalSupply > 200 && data.totalSupply < 10000 ) \r\n        CONFIG.WEI_COST=CONFIG.COST2;\r\n\r\n\r\n    let cost = CONFIG.WEI_COST;\r\n    let cost0 = CONFIG.COST0;\r\n    let cost1 = CONFIG.COST1;\r\n    let cost2 = CONFIG.COST2;\r\n    let cost3 = CONFIG.COST3;\r\n    let cost4 = CONFIG.COST4;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 10) {\r\n      newMintAmount = 10;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-white text-xl md:text-4xl mt-10\">\r\n        {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n      </h1>\r\n      <p className=\"text-blue-600 mt-4\">\r\n        <a target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n          {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n        </a>\r\n      </p>\r\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n        <>\r\n          <p className=\"text-white mt-5 font-semibold\">\r\n            Connect to the {CONFIG.NETWORK.NAME} network\r\n          </p>\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n              getData();\r\n            }}\r\n            className=\"bg-[#e13c33] text-white font-semibold px-5 py-3 text-lg md:text-xl rounded-lg mt-5 transition duration-700 ease-in-out transform hover:scale-110\"\r\n          >\r\n            Connect\r\n          </button>\r\n          {blockchain.errorMsg !== \"\" ? (\r\n            <p className=\"text-red-600 text-sm my-5\">{blockchain.errorMsg}</p>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p className=\"text-white mt-5 font-semibold text-lg\">{feedback}</p>\r\n\r\n          <div className=\"flex justify-center items-center mt-5\">\r\n            <button\r\n              className=\"bg-[#e13c33] text-white text-lg rounded-md font-medium p-2 mr-5\"\r\n              disabled={claimingNft ? 1 : 0}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                decrementMintAmount();\r\n              }}\r\n            >\r\n              -\r\n            </button>\r\n\r\n            <p className=\"text-white mr-5\">{mintAmount}</p>\r\n\r\n            <button\r\n              className=\"bg-[#e13c33] text-white text-lg rounded-md font-medium p-2\"\r\n              disabled={claimingNft ? 1 : 0}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                incrementMintAmount();\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            className=\"bg-[#e13c33] text-white font-semibold px-5 py-3 text-lg md:text-xl rounded-lg mt-10 transition duration-700 ease-in-out transform hover:-translate-y-1\"\r\n            disabled={claimingNft ? 1 : 0}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              claimNFTs();\r\n              getData();\r\n            }}\r\n          >\r\n            {claimingNft ? \"BUSY\" : \"BUY\"}\r\n          </button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Connect;\r\n","import gif from \"../images/giphy.gif\";\r\nimport graph from \"../images/graph.jpeg\";\r\nimport Connect from \"../components/Connect\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className=\"px-5 lg:px-16 xl:px-24 2xl:px-40 py-10\">\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-10\">\r\n        <div className=\"self-center\">\r\n          <img src={gif} className=\"object-fill mx-auto lg:mx-0\" />\r\n        </div>\r\n        <div className=\"text-center order-first lg:order-last\">\r\n          <h1 className=\"text-3xl md:text-5xl text-[#e13c33] font-semibold\">\r\n            CRYPTO CLONES\r\n          </h1>\r\n          <p className=\"text-sm font-light text-white mt-10\">\r\n            A generative NFT art collectible project of 10.000 unique avatars\r\n            immortalized on the Ethereum blockchain.\r\n          </p>\r\n          <Connect />\r\n          <p className=\"text-sm font-light text-white mt-10 underline\">\r\n            FREE MINT for the first 50 NFTs (FCFS)\r\n          </p>\r\n          <p className=\"text-sm font-light text-white mt-3\">\r\n            <span className=\"font-semibold\">- 0.02 ETH</span> {\"—>\"} from 51 to\r\n            200\r\n          </p>\r\n          <p className=\"text-sm font-light text-white mt-2\">\r\n            <span className=\"font-semibold\">- 0.035 ETH</span> {\"—>\"} from 201\r\n            to 10.000\r\n          </p>\r\n          <p className=\"text-sm font-light text-white mt-5\">\r\n            <span className=\"font-semibold\">GAS FEE REFUND*</span> if you buy 10\r\n            NFTs\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-20 mt-20 md:mt-28\">\r\n        <div>\r\n          <h1 className=\"text-3xl md:text-5xl text-[#e13c33] font-semibold\">\r\n            What are CRYPTO CLONES?\r\n          </h1>\r\n          <p className=\"text-white text-sm md:text-base font-light mt-12\">\r\n            Crypto Clones is the first and only DAO that uses 100% of secondary\r\n            sales and a large portion of primary sales to purchase and\r\n            fractionalize CloneX and the rarest bluechip NFTs to be distributed\r\n            to its members.\r\n          </p>\r\n          <p className=\"text-white text-sm md:text-base font-light mt-5\">\r\n            After sell-out, the $CLONE token represents fractional shares of\r\n            CloneX NFTs held in the vault. Each Crypto Clone earns 10 $CLONE per\r\n            day from staking.\r\n          </p>\r\n          <p className=\"text-white text-sm md:text-base font-light mt-5\">\r\n            Each holder will have privileged access to airdrops, and DAO members\r\n            with more than 10 Crypto Clones will automatically be named to the\r\n            DAO board of directors responsible for treasury management and more\r\n            future utility.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <iframe\r\n            className=\"h-full w-full\"\r\n            src={`https://www.youtube.com/embed/jHwPTsZQRek`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-20 mt-20 md:mt-28\">\r\n        <div>\r\n          <h1 className=\"text-3xl md:text-5xl text-[#e13c33] font-semibold\">\r\n            CLONE MINT PRICE\r\n          </h1>\r\n          <p className=\"text-white font-semibold mt-8 md:mt-12\">\r\n            THE EARLY BIRD GETS THE WORM!\r\n          </p>\r\n          <p className=\"font-light text-white mt-1\">\r\n            <span className=\"font-semibold\">FREE MINT</span> for the first 50\r\n            NFTs (FCFS)\r\n          </p>\r\n          <p className=\"font-light text-white mt-1\">\r\n            <span className=\"font-semibold\">- 0.02 ETH</span> {\"—>\"} from 51 to\r\n            200\r\n          </p>\r\n          <p className=\"font-light text-white mt-1\">\r\n            <span className=\"font-semibold\">- 0.035 ETH</span> {\"—>\"} from 201\r\n            to 10.000\r\n          </p>\r\n          <p className=\"font-light text-white mt-5\">\r\n            Get your clone early before price increase!\r\n          </p>\r\n          <p className=\"font-light text-white text-sm md:text-base mt-5\">\r\n            <span className=\"font-semibold\">*GAS FEE REFUND</span> (up to $350)\r\n            if you purchase 10 NFTs. Offer is not valid for NFT minted for free.\r\n            Please complete the form to request gas fee refund.\r\n          </p>\r\n          <div className=\"text-center\">\r\n            <a\r\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScOoFZLV4vCQxKEGhzcwUZj-s0RnFtiVTEE9Nid11hQvoopNQ/viewform\"\r\n              target=\"_blank\"\r\n            >\r\n              <button className=\"text-white text-sm md:text-base mt-10 bg-[#e13c33] py-3 px-5 rounded-3xl transition duration-700 ease-in-out transform hover:scale-105\">\r\n                GAS FEE REFUND FORM {\">\"}\r\n              </button>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"self-center\">\r\n          <img src={graph} alt=\"graph\" className=\"object-fill\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/baby.1dd45f9b.gif\";","import gif from \"../images/baby.gif\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst Roadmap = () => {\r\n  return (\r\n    <section\r\n      id=\"roadmap\"\r\n      className=\"px-5 lg:px-16 xl:px-24 2xl:px-40 py-10 mt-10\"\r\n    >\r\n      <h1 className=\"text-5xl md:text-[80px] text-[#e13c33] text-center font-semibold\">\r\n        ROADMAP\r\n      </h1>\r\n      <div className=\"mx-5 md:mx-24 lg:mx-32\">\r\n        <div className=\"grid grid-cols-2 gap-5 md:gap-10 mt-10\">\r\n          <div>\r\n            <h1 className=\"text-2xl md:text-5xl text-[#e13c33]\">10 %</h1>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-white font-semibold md:text-lg\">\r\n              AIRDROP CRYPTO CLONES\r\n            </h1>\r\n            <p className=\"text-white text-xs md:text-base mt-1\">\r\n              We <span className=\"font-semibold\">airdrop 15 Crypto Clone</span>{\" \"}\r\n              randomly for owners of the first 1000 tokens.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-5 md:gap-10 mt-10\">\r\n          <div>\r\n            <h1 className=\"text-2xl md:text-5xl text-[#e13c33]\">50 %</h1>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-white font-semibold md:text-lg\">\r\n              TREASURY SET UP\r\n            </h1>\r\n            <p className=\"text-white text-xs md:text-base mt-1\">\r\n              <span className=\"font-semibold\">50 ETH</span> from primary sales\r\n              will be placed in the treasury and 100% of secondary sales will\r\n              flow into treasury. We purchase our first{\" \"}\r\n              <span className=\"font-semibold\">\r\n                Bored Ape Yacht Club and CloneX\r\n              </span>{\" \"}\r\n              NFTs and place them in the DAO vault.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-5 md:gap-10 mt-10\">\r\n          <div>\r\n            <h1 className=\"text-2xl md:text-5xl text-[#e13c33]\">100 %</h1>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-white font-semibold md:text-lg\">\r\n              CRYPTOCLONE DAO AND $CLONE\r\n            </h1>\r\n            <p className=\"text-white text-xs md:text-base mt-1\">\r\n              We’ll set up the Crypto Clones{\" \"}\r\n              <span className=\"font-semibold\">DAO</span> to fully leverage the\r\n              power of our community. Start of staking,{\" \"}\r\n              <span className=\"font-semibold\">$CLONE token</span> release and\r\n              board of director setup.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-2 gap-5 md:gap-10 mt-10\">\r\n          <div>\r\n            <h1 className=\"text-2xl md:text-5xl text-[#e13c33]\">\r\n              CRYPTO CLONES 2.0\r\n            </h1>\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-white font-semibold md:text-lg\">\r\n              BREEDING AND FUTURE UTILITY\r\n            </h1>\r\n            <p className=\"text-white text-xs md:text-base mt-1\">\r\n              Crypto Clone holders gain access to breeding using $CLONE tokens.\r\n              More utility and ability to using the $CLONE token to unfold in\r\n              the future.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center mt-12\">\r\n          <Link to=\"navbar\" smooth={true} duration={1000}>\r\n            <button className=\"bg-[#e13c33] text-white font-semibold px-5 py-3 md:text-xl rounded-lg transition duration-700 ease-in-out transform hover:scale-105\">\r\n              Mint\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10 mt-20 md:mt-32\">\r\n          <div className=\"self-center\">\r\n            <h1 className=\"text-3xl md:text-5xl text-[#e13c33] font-semibold\">\r\n              BREADING\r\n            </h1>\r\n            <p className=\"text-white text-sm md:text-base mt-3 md:mt-12\">\r\n              Second generation of clones is closer than you think… To breed you\r\n              need at least 2 clones.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <img src={gif} alt=\"baby alien\" className=\"object-fill\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Roadmap;\r\n","import Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport Home from './sections/Home';\nimport Roadmap from './sections/Roadmap';\nimport './styles/output.css'\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Home />\n      <Roadmap />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}